Class of Rectangle(Area and Rectangle)

#include <iostream>

using namespace std;

class Rectangle
{
    public:
    int length;
    int breadth;
    int area()
   {
     
     return length*breadth; 
   }
   

    int perimeter()
  {
    return 2*(length*breadth) ;
  }
};

   int main()
 
{
    Rectangle r1,r2;
    r1.length=15;
    r1.breadth=5;
    cout<<"r1 area is :"<<r1.area()<<endl;
    cout<<"r1 perimeter is :"<<r1.perimeter()<<endl;
    
    r2.length=3;
    r2.breadth=10;
    
    cout<<"r2 area is :"<<r2.area()<<endl;
    cout<<"r2 perimeter is :"<<r2.perimeter()<<endl;
    
    return 0;
}  

unig pointer

#include <iostream>

using namespace std;

class Rectangle
{
    public:
    int length;
    int breadth;
    int area()
   {
     
     return length*breadth; 
   }
   

    int perimeter()
  {
    return 2*(length*breadth) ;
  }
};

   int main()
 
{
    Rectangle r1;
    
    Rectangle *ptr;
    ptr=&r1;
    ptr->length=10;
    ptr->breadth=6;
    
    cout<<"Area :"<<ptr->area()<<endl;
    cout<<"Perimeter :"<<ptr->perimeter()<<endl;
    
}  

private class

#include <iostream>

using namespace std;

class Rectangle
{
    private:
          int length;
          int breadth;
    public:
    
           void setlength(int l)
       {
           if(l>=0)
           
                   length=l;
           else
                   length=0;
    
       }
           void setbreadth(int b)
       {
            if(b>=0)
                  breadth=b;
            else
                 breadth=0;
       }
          int getlength()
       {
           return length;
       }
          int getbreadth()
        {
            return breadth;
        }
           int area()
        {
     
            return length*breadth; 
        }
   

              int perimeter()
        {
                return 2*(length*breadth) ;
        }
};

   int main()
 
{
    Rectangle r1;
    
    r1.setlength(10);
    r1.setbreadth(5);
    
    cout<<"Area :"<<r1.area()<<endl;
    cout<<"perimeter :"<<r1.perimeter()<<endl;
    
    return 0;
}  

Constuctors class

#include <iostream>

using namespace std;

class Rectangle
{
    private:
          int length;
          int breadth;
    public:
    
         /*  Rectangle()
        {
            length=1;
            breadth=1;
        }*/
    
          Rectangle(int l=1,int b=1)
       {
           setlength(l);
           setbreadth(b);
       }
           Rectangle(Rectangle &r)
       {
           length=r.length;
           breadth=r.breadth;
       }
       
           void setlength(int l)
       {
           if(l>=0)
           
                   length=l;
           else
                   length=0;
    
       }
           void setbreadth(int b)
       {
            if(b>=0)
                  breadth=b;
            else
                 breadth=0;
       }
          int getlength()
       {
           return length;
       }
          int getbreadth()
        {
            return breadth;
        }
         
           int area()
        {
     
            return length*breadth; 
        }
   

              int perimeter()
        {
                return 2*(length*breadth) ;
        }
};

   int main()
 
{
    Rectangle r1(10,5);
    Rectangle r2(r1);
    //Rectangle r(10,5);
    
    cout<<"Area :"<<r2.area()<<endl;
    
    
    return 0;
}  

Structure Class

#include <iostream>

using namespace std;
 struct Demo
{
    int x;
    int y;



  void Display()
  {
      cout<<x<<" "<<y<<endl;
  }
};
  
     int main()
 {
      Demo d;
      d.x=10;
      d.y=20;
      d.Display();
      return 0;
  }
